{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/client/gram.js","mycph.js","src/client/index.js","src/client/map.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","service","fetchGrams","latlng","xhttp","window","XMLHttpRequest","open","lat","lng","send","onreadystatechange","readyState","status","mediaStream","JSON","parse","responseText","onmediasready",2,"makeMapBox","$map","document","createElement","id","$app","appendChild","mapService","buildMap","run","gramService","medias","forEach","media","location","console","log","addMarker","latitude","longitude","images","thumbnail","url","clickHandler","mycph","init","$container","innerHTML","./gram","./map",3,"global","L","map","icon","iconUrl","iconSize","popupAnchor","customPopup","customOptions","maxWidth","className","marker","bindPopup","addTo","setView","tileLayer","attribution","maxZoom","accessToken","on","options","this","self"],"mappings":"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","file":"mycph.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var service = {};\nvar onMediasReady;\n\nservice.fetchGrams = function (latlng) {\n\tvar xhttp = new window.XMLHttpRequest();\n\n\txhttp.open(\"GET\", \"./grams?lat=\" + latlng.lat + \"&lng=\" + latlng.lng, true);\n  xhttp.send();\n\n\txhttp.onreadystatechange = function () {\n\t\tif (xhttp.readyState == 4 && xhttp.status == 200) {\n\t\t\tvar mediaStream = JSON.parse(xhttp.responseText);\n      if(service.onmediasready) {\n        service.onmediasready(mediaStream);\n      }\n\t\t}\n\t};\n}\n\n\nmodule.exports = service;\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar service = {};\nvar onMediasReady;\n\nservice.fetchGrams = function (latlng) {\n\tvar xhttp = new window.XMLHttpRequest();\n\n\txhttp.open(\"GET\", \"./grams?lat=\" + latlng.lat + \"&lng=\" + latlng.lng, true);\n  xhttp.send();\n\n\txhttp.onreadystatechange = function () {\n\t\tif (xhttp.readyState == 4 && xhttp.status == 200) {\n\t\t\tvar mediaStream = JSON.parse(xhttp.responseText);\n      if(service.onmediasready) {\n        service.onmediasready(mediaStream);\n      }\n\t\t}\n\t};\n}\n\n\nmodule.exports = service;\n\n},{}],2:[function(require,module,exports){\nvar mapService = require('./map');\nvar gramService = require('./gram');\nvar service = {};\nvar $app;\n\nfunction makeMapBox() {\n  \n  var $map = document.createElement(\"div\");\n  $map.id = \"map\";\n  \n  $app.appendChild($map);\n\n  mapService.buildMap();\n  return $map;\n}\n\nfunction run () {\n  \n  gramService.onmediasready= function (medias) {\n    medias.forEach(function(media) {\n      if(media.location) {\n        console.log(media);\n        mapService.addMarker(\n          media.location.latitude, \n          media.location.longitude,\n          media.images.thumbnail.url);\n      }\n    })\n  }\n\n  mapService.clickHandler = gramService.fetchGrams;\n\n  var $map = makeMapBox();\n}\n\nvar mycph = window.mycph || {};\n\nmycph.init = function($container) {\n  $app = $container;\n  $app.innerHTML = \"\";\n}\n\nmycph.run = function () {\n  if(typeof $app === 'undefined') \n    throw new Error(\"the app must provide a DOM container\");\n\n  run();\n}\n\nwindow.mycph = mycph;\n\n/*domready(function () {\n  var myc = {};\n\n  myc.init = function ($container) {\n    if(typeof $container === 'undefined')\n      throw new Error(\"you must provide a container element for the application\");\n\n    $app = $container;\n  }\n\n  myc.run = function () {\n    run();\n  }\n\n  exports.myc = myc;\n\n});\n\nvar $app;*/\n/*service.getDataFromServer = function (callback) {\n\tvar xhttp = new window.XMLHttpRequest();\n\n\txhttp.open(\"GET\", \"./grams\", true);\n  xhttp.send();\n\n\txhttp.onreadystatechange = function () {\n\t\tif (xhttp.readyState == 4 && xhttp.status == 200) {\n\t\t\tvar mediaStream = JSON.parse(xhttp.responseText);\n\t\t\tcallback(mediaStream);\n\t\t}\n\t};\n}\n\nservice.renderPage = function (medias) {\n\tvar $mycph = document.getElementById(\"mycph\");\n  var $medias = document.createElement(\"medias\");\n  // the 'grams' objects are contained in 'medias'\n  console.log(medias);\n  medias.forEach(function(media) {\n    var $media = document.createElement(\"div\");\n    $media.id = \"media\";\n    \n    $media.appendChild( document.createTextNode(\"id: \") );\n    $media.appendChild( document.createTextNode(media.id) );\n    $media.appendChild( document.createElement(\"br\") );\n    $media.appendChild( document.createTextNode(\"location: \") );\n    $media.appendChild( document.createTextNode(media.location.latitude + \", \") );\n    $media.appendChild( document.createTextNode(media.location.longitude + \", \") );\n    $media.appendChild( document.createTextNode(media.location.name) );\n    $media.appendChild( document.createElement(\"hr\") );\n\n    $medias.appendChild($media);\n  });\n\t$mycph.appendChild($medias);\n\n}*/\n\n},{\"./gram\":1,\"./map\":3}],3:[function(require,module,exports){\n(function (global){\nvar L = (typeof window !== \"undefined\" ? window['L'] : typeof global !== \"undefined\" ? global['L'] : null);\nconsole.log(L);\nvar map;\nvar service = {};\n\n//L.Icon.Default.imagePath = \"/build/location/\";\n\nvar clickHandler;\n\nservice.addMarker = function (lat, lng, thumbnail) {\n\n  var icon =  L.icon({\n    iconUrl: thumbnail,\n    iconSize: [70, 70],\n    popupAnchor: [0,-15]\n  });\n\n\n    //var hightUrl = data.images.standard_resolution.url\n  //  var imgUrl = this.thumbnail;\n\n  // create popup contents\n      var customPopup = \"<br/><img src='\"+thumbnail+\"'  width='140px' length='140px'/>\"; //\"Mozilla Toronto Offices<br/><img src='http://joshuafrazier.info/images/maptime.gif' alt='maptime logo gif' width='350px'/>\";\n\n // specify popup options\n      var customOptions =\n          {\n          'maxWidth': '500',\n          'className' : 'custom'\n          }\n\n  console.log(icon);\n  //L.marker([lat, lng], {icon:icon}).addTo(map);\n  L.marker([lat, lng], {icon:icon}).bindPopup(customPopup,customOptions).addTo(map);\n}\n\nservice.buildMap = function () {\n\n//connection\n  map = L.map('map').setView([55.676023,12.569031], 13);\n  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\n    attribution: 'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery Â© <a href=\"http://mapbox.com\">Mapbox</a>',\n    maxZoom: 30,\n    id: 'ddamba.ofm04n7i',\n    accessToken: 'pk.eyJ1IjoiZGRhbWJhIiwiYSI6Ik9vX1VPdmcifQ.nEbSOXJ-DWVGhiEY771xvg'\n  }).addTo(map);\n\n  if(service.clickHandler) {\n    map.on('click', function(e) {\n      return service.clickHandler(e.latlng);\n    });\n  }\n}\n\nservice.init = function (options) {\n  if(options.clickHandler) {\n    clickHandler = options.clickHandler;\n  }\n}\n\nmodule.exports = service;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}]},{},[2])\n\n","var mapService = require('./map');\nvar gramService = require('./gram');\nvar service = {};\nvar $app;\n\nfunction makeMapBox() {\n  \n  var $map = document.createElement(\"div\");\n  $map.id = \"map\";\n  \n  $app.appendChild($map);\n\n  mapService.buildMap();\n  return $map;\n}\n\nfunction run () {\n  \n  gramService.onmediasready= function (medias) {\n    medias.forEach(function(media) {\n      if(media.location) {\n        console.log(media);\n        mapService.addMarker(\n          media.location.latitude, \n          media.location.longitude,\n          media.images.thumbnail.url);\n      }\n    })\n  }\n\n  mapService.clickHandler = gramService.fetchGrams;\n\n  var $map = makeMapBox();\n}\n\nvar mycph = window.mycph || {};\n\nmycph.init = function($container) {\n  $app = $container;\n  $app.innerHTML = \"\";\n}\n\nmycph.run = function () {\n  if(typeof $app === 'undefined') \n    throw new Error(\"the app must provide a DOM container\");\n\n  run();\n}\n\nwindow.mycph = mycph;\n\n/*domready(function () {\n  var myc = {};\n\n  myc.init = function ($container) {\n    if(typeof $container === 'undefined')\n      throw new Error(\"you must provide a container element for the application\");\n\n    $app = $container;\n  }\n\n  myc.run = function () {\n    run();\n  }\n\n  exports.myc = myc;\n\n});\n\nvar $app;*/\n/*service.getDataFromServer = function (callback) {\n\tvar xhttp = new window.XMLHttpRequest();\n\n\txhttp.open(\"GET\", \"./grams\", true);\n  xhttp.send();\n\n\txhttp.onreadystatechange = function () {\n\t\tif (xhttp.readyState == 4 && xhttp.status == 200) {\n\t\t\tvar mediaStream = JSON.parse(xhttp.responseText);\n\t\t\tcallback(mediaStream);\n\t\t}\n\t};\n}\n\nservice.renderPage = function (medias) {\n\tvar $mycph = document.getElementById(\"mycph\");\n  var $medias = document.createElement(\"medias\");\n  // the 'grams' objects are contained in 'medias'\n  console.log(medias);\n  medias.forEach(function(media) {\n    var $media = document.createElement(\"div\");\n    $media.id = \"media\";\n    \n    $media.appendChild( document.createTextNode(\"id: \") );\n    $media.appendChild( document.createTextNode(media.id) );\n    $media.appendChild( document.createElement(\"br\") );\n    $media.appendChild( document.createTextNode(\"location: \") );\n    $media.appendChild( document.createTextNode(media.location.latitude + \", \") );\n    $media.appendChild( document.createTextNode(media.location.longitude + \", \") );\n    $media.appendChild( document.createTextNode(media.location.name) );\n    $media.appendChild( document.createElement(\"hr\") );\n\n    $medias.appendChild($media);\n  });\n\t$mycph.appendChild($medias);\n\n}*/\n","var L = (typeof window !== \"undefined\" ? window['L'] : typeof global !== \"undefined\" ? global['L'] : null);\nconsole.log(L);\nvar map;\nvar service = {};\n\n//L.Icon.Default.imagePath = \"/build/location/\";\n\nvar clickHandler;\n\nservice.addMarker = function (lat, lng, thumbnail) {\n\n  var icon =  L.icon({\n    iconUrl: thumbnail,\n    iconSize: [70, 70],\n    popupAnchor: [0,-15]\n  });\n\n\n    //var hightUrl = data.images.standard_resolution.url\n  //  var imgUrl = this.thumbnail;\n\n  // create popup contents\n      var customPopup = \"<br/><img src='\"+thumbnail+\"'  width='140px' length='140px'/>\"; //\"Mozilla Toronto Offices<br/><img src='http://joshuafrazier.info/images/maptime.gif' alt='maptime logo gif' width='350px'/>\";\n\n // specify popup options\n      var customOptions =\n          {\n          'maxWidth': '500',\n          'className' : 'custom'\n          }\n\n  console.log(icon);\n  //L.marker([lat, lng], {icon:icon}).addTo(map);\n  L.marker([lat, lng], {icon:icon}).bindPopup(customPopup,customOptions).addTo(map);\n}\n\nservice.buildMap = function () {\n\n//connection\n  map = L.map('map').setView([55.676023,12.569031], 13);\n  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\n    attribution: 'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery Â© <a href=\"http://mapbox.com\">Mapbox</a>',\n    maxZoom: 30,\n    id: 'ddamba.ofm04n7i',\n    accessToken: 'pk.eyJ1IjoiZGRhbWJhIiwiYSI6Ik9vX1VPdmcifQ.nEbSOXJ-DWVGhiEY771xvg'\n  }).addTo(map);\n\n  if(service.clickHandler) {\n    map.on('click', function(e) {\n      return service.clickHandler(e.latlng);\n    });\n  }\n}\n\nservice.init = function (options) {\n  if(options.clickHandler) {\n    clickHandler = options.clickHandler;\n  }\n}\n\nmodule.exports = service;\n"],"sourceRoot":"/source/"}